# why use yaml to manage plugins
# see http://genkisugimoto.com/blog/manage-vim-plugins-via-yaml/

# Normal Loading
# ==========================================

# StartUp Plugins{{{
# Core
# ----------------------------------------
- repo: Shougo/dein.vim

# Completion
# ----------------------------------------
- repo: neoclide/coc.nvim
  merge: 0
  rev: release
  hook_add: source  $VIM_PATH/layers/+completion/coc/config.vim

# - repo: SirVer/ultisnips
#   hook_add: source $VIM_PATH/layers/+tools/ultisnips/config.vim

- repo: honza/vim-snippets
  depends: coc.nvim
  # depends: ultisnips

# UI
# ----------------------------------------
- repo: itchyny/lightline.vim
  hook_add: source $VIM_PATH/layers/+ui/lightline/config.vim

- repo: bagrat/vim-buffet
  hook_add: source $VIM_PATH/layers/+ui/buffet/config.vim
  depends: lightline.vim

# Tools
# ----------------------------------------
- repo: airblade/vim-rooter
  hook_source: |
    let g:rooter_manual_only = 1

- repo: christoomey/vim-tmux-navigator
  if: "! (has('win32') || has('win64'))"
  hook_add: source $VIM_PATH/layers/+tools/vim-tmux-navigator/config.vim
#}}}



# Lazy Loading
# ==========================================

# Completion{{{
- repo: mattn/emmet-vim
  on_event: InsertEnter
  on_ft: [ html, css, javascript, javascriptreact ]
  hook_source: |
    let g:user_emmet_complete_tag = 0
    let g:user_emmet_install_global = 0
    let g:user_emmet_install_command = 0
    let g:user_emmet_mode = 'i'
    let g:user_emmet_leader_key = '<C-;>'

- repo: Shougo/echodoc.vim
  on_event: CompleteDone
  hook_source: |
        call echodoc#enable()
        let g:echodoc#type = "virtual"
# }}}

# Syntax{{{
# Linters & Formaters
# ----------------------------------------
- repo: sbdchd/neoformat
  on_cmd: [Neoformat, Neoformat!]
  hook_source: source  $VIM_PATH/layers/+syntax/neoformat/config.vim

- repo: benekastah/neomake
  on_path: .*
  on_cmd: [Neomake, NeomakeFile, NeomakeEnable, NeomakeToggle, NeomakeInfo]
  hook_source: |
    source $VIM_PATH/layers/+syntax/neomake/config.vim
    call neomake#configure#automake('rwn', 300)

# Syntax Helpers
# ----------------------------------------
- repo: luochen1990/rainbow
  on_ft: [python, javascript, javascriptreact, html, css, go, vim, toml]
  hook_source: let g:rainbow_active = 0

- repo: tyru/caw.vim
  on_map: { nx: <Plug> }

- repo: machakann/vim-sandwich
  on_map: { vnx: [<Plug>(operator-sandwich-, <Plug>(textobj-sandwich-]}

- repo: Raimondi/delimitMate
  on_event: FileType
  hook_source: source $VIM_PATH/layers/+syntax/delimitMate/config.vim

# Coding tools
# ----------------------------------------
- repo: junegunn/vim-easy-align
  on_ft:
    - vim
    - md
    - vimwiki
    - json
    - go
    - html
    - js
    - jsx
    - py
    - css
    - java
    - less
    - tmpl
    - toml
    - xml
    - sql
    - Dockerfile

- repo: AndrewRadev/splitjoin.vim
  on_map: { n: <Plug>Splitjoin }

- repo: terryma/vim-expand-region
  on_map: { x: <Plug> }

- repo: kana/vim-textobj-user
  on_func: textobj#user#

- repo: kana/vim-operator-user
  lazy: 1

- repo: kana/vim-niceblock
  on_map: { x: <Plug> }

- repo: kana/vim-smartchr
  on_event: InsertCharPre

- repo: kana/vim-operator-replace
  on_map: { vnx: <Plug> }
# }}}

# Git{{{
- repo: jreybert/vimagit
  on_cmd: Magit

- repo: lambdalisue/gina.vim
  on_cmd: Gina

- repo: kristijanhusak/defx-git
  on_source: defx.nvim
  hook_source: source  $VIM_PATH/layers/+ui/defx/+defx-git.vim

- repo: tpope/vim-fugitive
  on_cmd:
    - G
    - Git
    - Gblame
    - Gpush
    - Glog
    - Gclog
    - Gllog
    - Gdiffsplit
    - Gvdiffsplit

- repo: tpope/vim-rhubarb
  depends: vim-fugitive
  on_cmd: Gbrowse

- repo: neoclide/denite-git
  on_cmd: Denite
# }}}

# Language{{{
# CSS
# ----------------------------------------
- repo: hail2u/vim-css3-syntax
  on_ft: css
- repo: cakebaker/scss-syntax.vim
  on_ft: [scss, sass]
# Go
# ----------------------------------------
- repo: fatih/vim-go
  on_ft: go
  hook_source: source $VIM_PATH/layers/+lang/go/vim-go/config.vim

# HTML
# ---------------------------------------
- repo: othree/html5.vim
  on_ft: html
  hook_add: |
    let g:html5_event_handler_attributes_complete = 0
    let g:html5_rdfa_attributes_complete = 0
    let g:html5_microdata_attributes_complete = 0
    let g:html5_aria_attributes_complete = 0

# Java
# ----------------------------------------
- repo: tpope/vim-classpath
  on_ft: java

# Javascript
# ----------------------------------------
- repo: chemzqm/vim-jsx-improve
  on_ft: [javascript, javascriptreact]

# JSON
# ----------------------------------------
- repo: elzr/vim-json
  on_ft: json
  hook_add: let g:vim_json_syntax_conceal = 0

# Markdown
# ---------------------------------------
- repo: plasticboy/vim-markdown
  on_ft: markdown
  hook_add: source $VIM_PATH/layers/+lang/markdown/vim-markdown/config.vim

- repo: iamcco/markdown-preview.nvim
  on_ft: [markdown, pandoc.markdown, rmd]
  build: 'cd app & yarn install'
  hook_source: source $VIM_PATH/layers/+lang/markdown/markdown-preview.nvim/config.vim

- repo: junegunn/vim-emoji
  on_ft: [markdown, vim]

# LaTeX
# ---------------------------------------
- repo: lervag/vimtex
  on_ft: [tex, latex, plaintex]
  hook_source: source $VIM_PATH/layers/+lang/latex/vimtex/config.vim

- repo: KeitaNakamura/tex-conceal.vim
  on_ft: [tex, latex, plaintex]
  hook_source: |
    let g:tex_conceal='abdmg'

# Python
# ----------------------------------------
- repo: vim-python/python-syntax
  on_ft: python
  hook_add: let g:python_highlight_all = 1

- repo: Vimjas/vim-python-pep8-indent
  on_ft: python

- repo: tmhedberg/SimpylFold
  on_ft: python

- repo: vim-scripts/python_match.vim
  on_ft: python

- repo: raimon49/requirements.txt.vim
  on_ft: requirements

# TOML
# ----------------------------------------
- repo: cespare/vim-toml
  on_ft: toml

# Typescript
# ----------------------------------------
- repo: leafgarland/typescript-vim
  on_ft: [typescriptreact, typescript]

- repo: peitalin/vim-jsx-typescript
  on_ft: [typescriptreact]

# XML
# ----------------------------------------
- repo: vim-scripts/xml.vim
  on_ft: xml

# YAML
# ----------------------------------------
- repo: pearofducks/ansible-vim
  on_ft: [yaml.ansible, ansible_hosts]
# }}}


# Tools{{{
# To setup Google Calendar with calenar.vim
# https://github.com/itchyny/calendar.vim#important-notice
- repo: itchyny/calendar.vim
  on_cmd: Calendar
  hook_source: source $VIM_PATH/layers/+tools/calendar/config.vim

- repo: t9md/vim-choosewin
  on_map: {n: <Plug>}
  hook_source: source  $VIM_PATH/layers/+tools/choosewin/config.vim

- repo: Shougo/denite.nvim
  on_cmd: Denite
  depends: vim-devicons
  hook_source: |
        source  $VIM_PATH/layers/+tools/denite/config.vim
        source  $VIM_PATH/layers/+tools/denite/+denite_menu.vim

- repo: junegunn/goyo.vim
  on_cmd: Goyo
  hook_source: source $VIM_PATH/layers/+tools/goyo/config.vim

- repo: junegunn/Limelight.vim
  on_cmd: Limelight
  depends: Goyo
  hook_source: source $VIM_PATH/layers/+tools/limelight/config.vim

- repo: junegunn/fzf
  build: './install --all'
  merged: 0

- repo: junegunn/fzf.vim
  depends: fzf
  on_cmd: [Colors, Rg, Buffers]
  on_func: [Fzf_dev, vista#finder#fzf#Run]
  hook_source: source $VIM_PATH/layers/+tools/fzf/config.vim

- repo: yuki-ycino/fzf-preview.vim
  depends: [fzf, vim-fugitive]
  on_cmd:
    - FzfPreviewProjectFiles
    - FzfPreviewDirectoryFile
    - FzfPreviewBuffers
    - FzfPreviewMruFiles
    - FzfPreviewAllBuffers
    - FzfPreviewProjectGrep
    - FzfPreviewMruFiles
    - FzfPreviewFromResources
    - FzfPreviewGitStatus
  hook_source: source $VIM_PATH/layers/+tools/fzf/config.vim

- repo: Shougo/neomru.vim
  on_source: [denite.vim, fzf-preview.vim]
  hook_add: |
    let g:neomru#directory_mru_path = $DATA_PATH . '/mru/dir'
    let g:neomru#file_mru_path = $DATA_PATH . '/mru/file'
    let g:unite_source_file_mru_limit = 5000

- repo: ludovicchabant/vim-gutentags
  if: executable('ctags')
  on_event: [BufReadPost, BufWritePost]
  hook_source: source $VIM_PATH/layers/+tools/vim-gutentags/config.vim

- repo: liuchengxu/vista.vim
  on_cmd: Vista
  hook_source: source $VIM_PATH/layers/+tools/vista/config.vim

- repo: liuchengxu/vim-which-key
  on_cmd: [Whichkey, Whichkey!]
  hook_add: source $VIM_PATH/layers/+tools/whichkey/config.vim
  hook_post_source: |
        call which_key#register('<Space>', 'g:which_key_map')
        call which_key#register(';', 'g:which_key_localmap')
        call which_key#register(']', 'g:which_key_rsbgmap')
        call which_key#register('[', 'g:which_key_lsbgmap')
        nnoremap <silent> <leader> :<c-u>WhichKey '<Space>'<CR>
        vnoremap <silent> <leader> :<c-u>WhichKeyVisual '<Space>'<CR>

- repo: metakirby5/codi.vim
  on_cmd: Codi
  hook_source: source $VIM_PATH/layers/+tools/codi/config.vim

- repo: benmills/vimux
  on_cmd:
    - VimuxPromptCommand
    - VimuxRunLastCommand
    - VimuxInspectRunner
    - VimuxCloseRunner
    - VimuxInterruptRunner
    - VimuxZoomRunner
  hook_source: let g:VimuxOrientation = 'v'

- repo: vimwiki/vimwiki
  on_map: {n: <Plug>}
  on_cmd: [VimwikiIndex, VimwikiDiaryIndexVimwikiUISelect]
  hook_add: |
    let g:vimwiki_use_calendar = 1
    let g:vimwiki_hl_headers = 1
    let g:vimwiki_hl_cb_checked = 1
    let g:vimwiki_autowriteall = 0
    let g:vimwiki_map_prefix = '<Leader>w'
    let g:vimwiki_folding = 'custom'
    let g:vimwiki_table_mappings = 0
  hook_source: source $VIM_PATH/layers/+tools/vimwiki/config.vim

- repo: honza/dockerfile.vim
  on_ft: Dockerfile

- repo: thinca/vim-quickrun
  on_cmd: QuickRun
  hook_add: |
        let g:quickrun_config = {
            \   "_" : {
            \       "outputter" : "message",
            \   },
            \}
        let g:quickrun_no_default_key_mappings = 1

- repo: kshenoy/vim-signature
  on_path: .*
  hook_add: |
    let g:SignatureForceRemoveGlobal = 0
    let g:SignatureUnconditionallyRecycleMarks = 1
    let g:SignatureErrorIfNoAvailableMarks = 0
    let g:SignaturePurgeConfirmation = 0
    let g:SignatureMarkTextHLDynamic = 1
    let g:SignatureMarkerTextHLDynamic = 1
  hook_source: source $VIM_PATH/layers/+tools/vim-signature/config.vim

- repo: Ron89/thesaurus_query.vim
  on_cmd:
    - Thesaurus
    - ThesaurusQueryReplaceCurrentWord
    - ThesaurusQueryLookupCurrentWord
  hook_add: |
    let g:tq_map_keys = 0
    let g:tq_use_vim_autocomplete = 0

- repo: reedes/vim-wordy
  on_cmd: [Wordy, NextWordy, PrevWordy]

- repo: tpope/vim-abolish
  on_map: [Abolish, Abolish!, Subvert, Subvert!]

- repo: arthurxavierx/vim-caser
  on_ft: [vim, md, vimwiki, json, go, html, js, jsx, py, css, java, less, tmpl, toml, xml, sql, Dockerfile]

- repo: simnalamburt/vim-mundo
  on_map: {n: <Plug>}

- repo: tpope/vim-repeat
  on_map: .*

- repo: easymotion/vim-easymotion
  on_map: {n: <Plug>}
  hook_source: |
    let g:EasyMotion_do_mapping = 0
    let g:EasyMotion_prompt = 'Jump to → '
    let g:EasyMotion_keys = 'fjdkswbeoavn'
    let g:EasyMotion_smartcase = 1
    let g:EasyMotion_use_smartsign_us = 1

- repo: haya14busa/vim-asterisk
  on_map: { nv: <Plug> }

- repo: t9md/vim-quickhl
  on_map: { nv: <Plug> }

- repo: brooth/far.vim
  on_cmd: [Far, Farp, F]
# }}}

# UI{{{
- repo: nathanaelkane/vim-indent-guides
  on_event: VimEnter
  hook_post_source: IndentGuidesEnable
  hook_add: source $VIM_PATH/layers/+ui/vim-indent-guides/config.vim

- repo: mhinz/vim-startify
  on_cmd: Startify
  depends: vim-devicons
  hook_source: source $VIM_PATH/layers/+ui/startify/config.vim
  hook_post_source: |
      function! StartifyEntryFormat()
        return 'WebDevIconsGetFileTypeSymbol(absolute_path) ." ". entry_path'
      endfunction

- repo: norcalli/nvim-colorizer.lua
  if: has('nvim') && has('nvim-0.4.0')
  on_path: .*
  hook_source: luafile $VIM_PATH/layers/+ui/colorizer/colorizer.lua

- repo: itchyny/vim-cursorword
  on_path: .*
  hook_source: |
    augroup user_plugin_cursorword
      autocmd!
      autocmd FileType denite,qf,easygitblame let b:cursorword = 0
      autocmd WinEnter * if &diff | let b:cursorword = 0 | endif
      autocmd InsertEnter * let b:cursorword = 0
      autocmd InsertLeave * let b:cursorword = 1
    augroup END

- repo: yuttie/comfortable-motion.vim
  on_func: comfortable_motion#flick
  hook_add: |
        let g:comfortable_motion_no_default_key_mappings = 1
        let g:comfortable_motion_impulse_multiplier = 1

- repo: ryanoasis/vim-devicons
  hook_add: let g:webdevicons_enable_denite = 1

- repo: rhysd/accelerated-jk
  on_map: { n: <Plug> }

- repo: dhruvasagar/vim-zoom
  on_map: { n: <Plug> }

- repo: Shougo/defx.nvim
  on_cmd: Defx
  hook_source: source $VIM_PATH/layers/+ui/defx/config.vim

- repo: kristijanhusak/defx-icons
  on_source: defx.nvim
# }}}




# Commented plugins too old, or found much better
# ==================================================
# - repo: taigacute/spaceline.vim

# - repo: rhysd/vim-operator-surround
#   depends: [vim-operator-user, vim-textobj-multiblock]
#   on_map:  { vnx : <Plug> }

# use coc-git instead of vim-gitgutter
# - repo: airblade/vim-gitgutter
#   on_path: .*
#   hook_source: source ~/.config/nvim/core/plugins/vim-gitgutter.vim

# - repo: Yggdroot/indentLine
#   on_ft: [python,html,css,vim,javascript,javascriptreact,vue]
#   hook_source: source $VIM_PATH/layers/+ui/indentline/config.vim

# - repo: w0rp/ale
#   hook_add: source ~/.config/nvim/layers/+syntax/ale/config.vim
# }}}


# - repo: rizzatti/dash.vim
#   on_map: { n: <Plug> }
#   hook_add: |
#       let g:dash_map = {
#         \ 'javascript': ['javascript', 'NodeJS'],
#         \ 'javascriptreact': ['react'],
#         \ 'html': ['html', 'svg'],
#         \ 'go' : 'Go',
#         \}

# - repo: tpope/vim-markdown
#   on_ft: markdown
#   hook_add: |
#         let g:markdown_fenced_languages = [
#           \ 'html',
#           \ 'bash=sh',
#           \ 'css',
#           \ 'javascript',
#           \ 'jsx=javascriptreact',
#           \ 'go',
#           \]

# - repo: osyo-manga/vim-textobj-multiblock
#   depends: vim-textobj-user
#   on_map: { ox: <Plug> }
#   hook_add:  let g:textobj_multiblock_no_default_key_mappings = 1

# Git
# ----------------------------------------
# - repo: itchyny/vim-gitbranch

# - repo: airblade/vim-gitgutter
#   on_path: .*
#   hook_source: source $VIM_PATH/layers/+git/vim-gitgutter/config.vim

